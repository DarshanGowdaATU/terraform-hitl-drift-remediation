name: Detect Terraform Drift

on:
  schedule:
    - cron: "*/30 * * * *"  # Every 30 minutes
  push:
    paths:
      - 'terraform/**'
  workflow_dispatch:

jobs:
  detect-drift:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      - name: Terraform Plan for Drift Detection
        id: plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          set +e
          PLAN_OUTPUT=$(terraform plan -detailed-exitcode -out=tfplan.out 2>&1)
          PLAN_EXIT=$?
          echo "PLAN_EXIT=$PLAN_EXIT" >> $GITHUB_ENV
          echo "--- TF PLAN OUTPUT ---"
          echo "$PLAN_OUTPUT"
          echo "--- END ---"
          set -e

      - name: Check for Drift
        run: |
          echo "Terraform plan exit code: $PLAN_EXIT"
          if [[ "$PLAN_EXIT" == "2" ]]; then
            echo "⚠️ Drift detected!"
            echo "DriftOutput<<EOF" >> $GITHUB_OUTPUT
            terraform show -no-color tfplan.out >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          elif [[ "$PLAN_EXIT" == "0" ]]; then
            echo "✅ No drift detected."
          else
            echo "❌ Error during terraform plan"
            exit 1
          fi
